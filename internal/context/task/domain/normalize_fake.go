// Code generated by MockGen. DO NOT EDIT.
// Source: internal/context/task/domain/normalize.go

// Package domain is a generated GoMock package.
package domain

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// FakeNormalizer is a mock of Normalizer interface.
type FakeNormalizer struct {
	ctrl     *gomock.Controller
	recorder *FakeNormalizerMockRecorder
}

// FakeNormalizerMockRecorder is the mock recorder for FakeNormalizer.
type FakeNormalizerMockRecorder struct {
	mock *FakeNormalizer
}

// NewFakeNormalizer creates a new mock instance.
func NewFakeNormalizer(ctrl *gomock.Controller) *FakeNormalizer {
	mock := &FakeNormalizer{ctrl: ctrl}
	mock.recorder = &FakeNormalizerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *FakeNormalizer) EXPECT() *FakeNormalizerMockRecorder {
	return m.recorder
}

// Normalize mocks base method.
func (m *FakeNormalizer) Normalize(task *Task) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Normalize", task)
	ret0, _ := ret[0].(error)
	return ret0
}

// Normalize indicates an expected call of Normalize.
func (mr *FakeNormalizerMockRecorder) Normalize(task interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Normalize", reflect.TypeOf((*FakeNormalizer)(nil).Normalize), task)
}
